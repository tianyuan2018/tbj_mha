#!/usr/bin/env python
#-*- encoding:utf-8 -*-
#import os
import sys
import getopt
from multiprocessing import Process
import email
from email import encoders
from email.header import Header
from email.mime.text import MIMEText
from email.utils import parseaddr, formataddr
import smtplib

listSendTo=["your email",]

class MailSender(object):
    def __init__(self):
        try:
            self.MAIL_REVIEW_SMTP_SERVER = 'your server'
            self.MAIL_REVIEW_SMTP_PORT = your port
            self.MAIL_REVIEW_FROM_ADDR = 'your email'
            self.MAIL_REVIEW_FROM_PASSWORD = 'your password'
            self.MAIL_REVIEW_SMTP_TLS = True
        except AttributeError as a:
            print("Error: %s" % a)
        except ValueError as v:
            print("Error: %s" % v)

    def _format_addr(self, s):
        name, addr = parseaddr(s)
        return formataddr((Header(name, 'utf-8').encode(), addr))

    def _send(self, strTitle, strContent, listToAddr):
        msg = MIMEText(strContent, 'plain', 'utf-8')
        msg['From'] = self._format_addr(self.MAIL_REVIEW_FROM_ADDR)
        msg['To'] = ','.join(listToAddr)
        msg['Subject'] = Header(strTitle, "utf-8").encode()
        server = smtplib.SMTP(self.MAIL_REVIEW_SMTP_SERVER, self.MAIL_REVIEW_SMTP_PORT)  # SMTP协议默认端口是25
        if self.MAIL_REVIEW_SMTP_TLS:
            server.starttls()

        if self.MAIL_REVIEW_FROM_PASSWORD != '':
            server.login(self.MAIL_REVIEW_FROM_ADDR, self.MAIL_REVIEW_FROM_PASSWORD)
        sendcontent = server.sendmail(self.MAIL_REVIEW_FROM_ADDR, listToAddr, msg.as_string())
        server.quit()

    #调用方应该调用此方法，采用子进程方式异步阻塞地发送邮件，避免邮件服务挂掉影响archer主服务
    def sendEmail(self, strTitle, strContent, listToAddr):
        p = Process(target=self._send, args=(strTitle, strContent, listToAddr))
        p.start()

if __name__ == "__main__":
    opts,args = getopt.getopt(sys.argv[1:],"h",["orig_master_host=","new_master_host=","new_slave_hosts=","conf=","subject=","body=","app_vip=","new_master_ssh_port=","ssh_user="])
    for lines in opts:
        key,values = lines
        if key == '--orig_master_host':
            orig_master_host = values
        if key == '--new_master_host':
            new_master_host = values
        if key == '--new_slave_hosts':
            new_slave_hosts = values
        if key == '--subject':
            subject = values
        if key == '--body':
            body = values
    if "Recovering master server failed" in body:
        Title = "MHA切换失败"
    else:
        Title = "MHA切换成功"
    startSend = MailSender()
    startSend.sendEmail(Title, body, listSendTo)
